server {
	listen 80;
	server_name api.local.com;
	return 301 https://api.local.com$request_uri;
}

server {

   listen       443 ssl;
   client_max_body_size 60M;
   server_name  api.local.com;
   chunked_transfer_encoding on;
 
   access_log  /var/log/nginx/host.access.log  main;

   ssl_certificate  /etc/nginx/ssl/api.local.crt;
   ssl_certificate_key /etc/nginx/ssl/api.local.key;

   # Cadeia de Certificados ( https://gist.github.com/alexishida/607cca2e51ec356b1fe1909047ec70fd )
   ssl_client_certificate /etc/nginx/ssl/ca.crt;
   ssl_verify_client optional; # or `on` if you require client key
   # Valida a hierarquia ( https://stackoverflow.com/questions/8431528/nginx-ssl-certificate-authentication-signed-by-intermediate-ca-chain )
   ssl_verify_depth 2;

   ssl_dhparam /etc/nginx/ssl/dhparams.pem;

   ssl_prefer_server_ciphers on;
   ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
   ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;
 
   location / {
       proxy_pass              http://192.168.1.5:8080;
       proxy_http_version      1.1;
       proxy_set_header        Upgrade $http_upgrade;
       proxy_set_header        Connection 'upgrade';
       proxy_set_header        Host $host;
       proxy_cache_bypass      $http_upgrade;
       proxy_set_header        X-Real-IP $remote_addr;
       proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
       client_max_body_size    100M;
       client_body_buffer_size 128k;
       proxy_connect_timeout   90;
       proxy_send_timeout      90;
       proxy_read_timeout      90;
      # proxy_buffer_size       4k;
      # proxy_buffers           4 32k;
      # proxy_busy_buffers_size 64k;
      # proxy_buffering off;
       proxy_temp_file_write_size 64k;
       

   }
 
   #error_page  404              /404.html;
 
   # redirect server error pages to the static page /50x.html
   #
   error_page   500 502 503 504  /50x.html;
   location = /50x.html {
       root   /usr/share/nginx/html;
   }
 
}
